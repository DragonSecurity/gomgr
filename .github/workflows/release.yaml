name: Release gomgr

on:
  push:
    tags:
      - "v*.*.*"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    name: Build binaries
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        goos: [linux, darwin, windows]
        goarch: [amd64, arm64]

    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Setup Go
        uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6
        with:
          go-version: "1.25.3"

      - name: Set VERSION
        run: echo "VERSION=${GITHUB_REF_NAME}" >> $GITHUB_ENV

      - name: Build
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          BIN=gomgr
          if [ "${{ matrix.goos }}" = "windows" ]; then BIN=gomgr.exe; fi
          mkdir -p build
          go build -trimpath -ldflags "-s -w -X github.com/DragonSecurity/github-org-manager-go/internal/version.Version=${VERSION}" -o build/$BIN ./main.go

      - name: Package
        run: |
          PKG="gomgr_${VERSION}_${{ matrix.goos }}_${{ matrix.goarch }}"
          mkdir -p "dist/${PKG}"
          cp build/* "dist/${PKG}/"
          if [ -f README.md ]; then cp README.md "dist/${PKG}/"; fi
          if [ -f LICENSE ]; then cp LICENSE "dist/${PKG}/"; fi
          cd dist
          if [ "${{ matrix.goos }}" = "windows" ]; then
            zip -r "${PKG}.zip" "${PKG}"
          else
            tar -czf "${PKG}.tar.gz" "${PKG}"
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5
        with:
          name: "artifacts_${{ matrix.goos }}_${{ matrix.goarch }}"
          path: |
            dist/*.tar.gz
            dist/*.zip
          if-no-files-found: error

  release:
    name: Create GitHub Release
    runs-on: ubuntu-24.04
    needs: build
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5
        with:
          path: dist

      - name: Generate checksums
        run: |
          cd dist
          find . -type f \( -name "*.tar.gz" -o -name "*.zip" \) -print0 | xargs -0 -I {} sh -c 'sha256sum "{}" >> checksums.txt'
          ls -la

      - name: Create Release
        uses: softprops/action-gh-release@6da8fa9354ddfdc4aeace5fc48d7f679b5214090 # v2
        with:
          draft: false
          prerelease: false
          files: |
            dist/**/*.tar.gz
            dist/**/*.zip
            dist/checksums.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
